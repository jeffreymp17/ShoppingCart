{"version":3,"sources":["components/Cart/Cart.js","components/Header/Header.js","components/ProductCard/ProductCard.js","Utils/Data.js","components/Products/Products.js","App.js","serviceWorker.js","index.js"],"names":["Transition","props","react_default","a","createElement","Slide_default","Object","assign","direction","Cart","state","open","dense","products","finalAmount","total","forEach","product","index","_this","amountPerProduct","price","quantity","handleClickOpen","setState","handleClose","purchase","localStorage","remove","ToastStore","success","productId","aux","this","i","length","id","splice","set","_this2","get","map","ListItem_default","key","concat","ListItemAvatar_default","Avatar_default","src","image","alt","className","ListItemText_default","secondary","react","Typography_default","component","color","name","ListItemSecondaryAction_default","IconButton_default","aria-label","onClick","e","deleteProduct","Delete_default","ShoppingCart_default","Dialog_default","fullScreen","onClose","TransitionComponent","AppBar_default","Toolbar_default","Close_default","variant","Button_default","Grid_default","item","xs","md","lg","List_default","renderSelectedProducts","build","position","ToastContainer","POSITION","RIGHT","store","Component","Header","components_Cart_Cart","ProductCard","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","count","selectedProduct","buttonType","prevState","local","push","sm","xl","Card_default","CardActionArea_default","CardMedia_default","title","width","height","CardContent_default","gutterBottom","description","CardActions_default","Fab_default","disabled","addToCart","bind","size","selectQuantity","Add_default","spacing","Remove_default","Data","Product","container","components_ProductCard_ProductCard","App","components_Header_Header","Products","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3b43a63a.chunk.js","sourcesContent":["import React ,{Component,Fragment} from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport List from '@material-ui/core/List';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport './Cart.css';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport localStorage from 'local-storage';\nimport {ToastContainer, ToastStore} from 'react-toasts';\nimport Button from '@material-ui/core/Button';\n\nfunction Transition(props) {\n  return <Slide direction=\"up\" {...props} />;\n}\n\nclass Cart extends Component {\n  state = {\n   open: false,\n   dense: false,\n   products:[]\n  };\n  /**\n * Delete any product seleted in your cart\n * @param  {number}\n */\n  deleteProduct(productId){\n    let aux=this.state.products;\n    for(let i=0;i<aux.length;i++){\n      if(aux[i].id===productId){\n        aux.splice(i,1);\n        ToastStore.success('removed from the cart');\n        break;\n      }\n    }\n    this.setState({\"products\":aux});\n    localStorage.set(\"selectedProducts\",aux);\n  }\n  /**\n * Operation use to sum all sub total for any product\n * @param  {product}\n * @return  {number}\n */\n  finalAmount=(products)=>{\n    let total=0;\n    products.forEach((product,index)=>{\n      total += this.amountPerProduct(product);\n    })\n    return total;\n  }\n  /**\n * Calculates the amounts of all the products multiplied by their quantity\n * @param  {product}\n * @return  {number}\n */\n  amountPerProduct=(product)=>{\n    return product.price*product.quantity;\n  }\n  //open modal and  set open state\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n  //close modal and  set close state\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n  purchase=()=>{\n    localStorage.remove(\"selectedProducts\");\n    this.setState({\"products\":[]});\n    ToastStore.success('Successful Purchase');\n\n\n  }\n  //this method rendered all products selected previus\n  renderSelectedProducts() {\n  this.state.products=localStorage.get(\"selectedProducts\")==null?[]:localStorage.get(\"selectedProducts\");\n  return this.state.products.map((product,index) =>{\n    return <ListItem key={`selected-product-list${index}`}>\n      <ListItemAvatar>\n      <Avatar>\n      <img src={product.image} alt=\"Vr\" className=\"productImage\"/>\n      </Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        secondary={\n            <Fragment>\n              <Typography component=\"span\" className=\"inline\" color=\"textPrimary\">\n              {`${product.name}`}\n              </Typography>\n                {this.amountPerProduct(product)}\n                <Typography component=\"span\" className=\"inline\" color=\"textPrimary\">\n                {`No ${product.quantity}`}\n                </Typography>\n            </Fragment>}\n      />\n      <ListItemSecondaryAction>\n        <IconButton aria-label=\"Delete\" onClick={(e)=>this.deleteProduct(product.id)}>\n          <DeleteIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n\n    </ListItem>\n  })\n}\n  render() {\n    const { dense } = this.state;\n    return (\n      <div>\n        <IconButton color=\"inherit\" onClick={this.handleClickOpen}>\n        <ShoppingCartIcon/>\n        </IconButton>\n        <Dialog\n          fullScreen\n          open={this.state.open}\n          onClose={this.handleClose}\n          TransitionComponent={Transition}\n        >\n          <AppBar className=\"appBar\">\n            <Toolbar>\n              <IconButton color=\"inherit\" onClick={this.handleClose} aria-label=\"Close\">\n                <CloseIcon />\n              </IconButton>\n              <Typography variant=\"h6\" color=\"inherit\" className=\"flex\">\n              Cart\n              </Typography>\n              <Button color=\"inherit\" onClick={this.purchase}>Purchase</Button>\n            </Toolbar>\n          </AppBar>\n          <div className=\"gridMargin\">\n          <Grid item xs={12} md={6} lg={12}>\n            <Typography variant=\"h5\" className=\"titleTextSize\">\n            </Typography>\n            <div >\n              <List dense={dense}>\n              {this.renderSelectedProducts()}\n              </List>\n            </div>\n          </Grid>\n          <div className=\"total\" >\n          <Typography variant=\"h6\" color=\"inherit\" className=\"flex\">\n               {`Total:${this.finalAmount(this.state.products)}`}\n         </Typography>\n          </div>\n          </div>\n        </Dialog>\n        <ToastContainer position={ToastContainer.POSITION.RIGHT} store={ToastStore}></ToastContainer>\n      </div>\n    );\n  }\n}\nexport default Cart;\n","import React,{Component} from 'react';\nimport  './header.css';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Cart from '../Cart/Cart';\nimport Badge from '@material-ui/core/Badge';\n\nclass Header extends Component{\n\nrender(){\n\treturn(\n    <div className=\"root\">\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h5\" color=\"inherit\" className=\"grow\">\n          Shoppig Cart\n          </Typography>\n\t\t\t\t\t<Cart/>\t\t\n        </Toolbar>\n      </AppBar>\n    </div>\n\t)\n}\n}\nexport default Header;\n","  import React,{Component} from 'react';\n  import Card from '@material-ui/core/Card';\n  import CardActionArea from '@material-ui/core/CardActionArea';\n  import CardActions from '@material-ui/core/CardActions';\n  import CardContent from '@material-ui/core/CardContent';\n  import CardMedia from '@material-ui/core/CardMedia';\n  import Typography from '@material-ui/core/Typography';\n  import Grid from '@material-ui/core/Grid';\n  import Fab from '@material-ui/core/Fab';\n  import ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\n  import AddIcon from '@material-ui/icons/Add';\n  import RemoveIcon from '@material-ui/icons/Remove';\n  import   './ProductCard.css';\n  import localStorage from 'local-storage';\n  import {ToastContainer, ToastStore} from 'react-toasts';\n  var products=[];\n  class ProductCard extends Component{\n  constructor(){\n    super()\n    this.state={\n      count:0,\n      selectedProduct:{},\n      products:[]\n    }\n  }\n  /**\n * increment or decrement product quantity\n * @param  {string}\n * @return  {number}\n */\n    selectQuantity(buttonType){\n          this.setState(prevState => {\n          return {count: buttonType === 'add' ? prevState.count + 1: prevState.count - 1}\n      })\n    }\n    /**\n   * Get parameters from product and add selected product to current state\n   * @param  {product}\n   */\n    addToCart(image, name, price, id, quantity) {\n        this.setState(\n          {\n            selectedProduct: {\n              image,\n              name,\n              price,\n              id,\n              quantity\n            }\n          },\n          function () {\n            if(localStorage.get(\"selectedProducts\")){\n              const local = localStorage.get(\"selectedProducts\")\n              local.push(this.state.selectedProduct)\n              localStorage.set(\"selectedProducts\",local);\n              return\n            }\n            products.push(this.state.selectedProduct);\n            localStorage.set(\"selectedProducts\",products);\n            products = [];\n\n          }\n        );\n        ToastStore.success('added to the cart');\n        this.setState({count:0});\n      }\n    render(){\n      const {product}=this.props\n      return(\n        <Grid item xs={12} sm={4} lg={4} xl={3} className=\"marginCard\" >\n         <Card >\n           <CardActionArea>\n             <CardMedia\n             src={product.image}\n           title={product.name}>\n          <img src={product.image}  alt=\"cv\" width={250} height={230} />\n        </CardMedia>\n         <CardContent>\n           <Typography gutterBottom variant=\"h5\" component=\"h2\" className=\"ProductName\">\n        {product.name}\n           </Typography>\n          <Typography gutterBottom variant=\"h6\" component=\"h2\">\n        {product.description}\n          </Typography>\n        <Typography component=\"p\">\n        {`$${product.price}`}\n        </Typography>\n        </CardContent>\n        </CardActionArea>\n        <CardActions >\n        <Fab disabled={this.state.count===0}className=\"QuantityChangeContainer\"  color=\"primary\" aria-label=\"Add\" onClick={this.addToCart.bind(this,product.image,product.name,product.price,product.id,product.quantity+this.state.count)}>\n        <ShoppingCartIcon />\n        </Fab>\n        <Fab   size=\"small\" color=\"secondary\" aria-label=\"Add\"  onClick={this.selectQuantity.bind(this,\"add\")}>\n           <AddIcon />\n         </Fab>\n         <label  className=\"quantityText\" spacing={8}>{this.state.count}</label>\n         <Fab disabled={this.state.count===0} size=\"small\" color=\"secondary\" aria-label=\"Add\"  onClick={this.selectQuantity.bind(this,\"des\")}>\n           <RemoveIcon />\n         </Fab>\n        <ToastContainer position={ToastContainer.POSITION.RIGHT} store={ToastStore} className=\"toast-font-color\"></ToastContainer>\n        </CardActions>\n        </Card>\n        </Grid>\n      )\n    }\n  }\n  export default ProductCard;\n","  export const Data=[\n  {id:1,name:\"THK shoes \",price:550,description:\"Running shoes made with soft material very confortable to use\",\n  image:\"https://novaclutch.typepad.com/novaclutch/images/2007/11/18/gmds1.jpg\",quantity:0},\n\n  {id:2,name:\"Avenged Sevenfold T-shirt \",price:250,description:\"Very nice T-shirt from album Hail to the king from Avenged Sevenfold \",\n  image:\"https://roxxbkk.com/wp-content/uploads/2016/12/avengedsevenfold019-1.jpg\",quantity:0},\n\n  {id:3,name:\"Generic pants  \",price:300,description:\"elegant pants to wear on special occasions or everyday\",\n  image:\"https://images-na.ssl-images-amazon.com/images/I/615a3AWAVRL._UY606_.jpg\",quantity:0},\n\n  {id:4,name:\"Metallica \",price:650,description:\"Very soft\"\n  ,image:\"https://images-na.ssl-images-amazon.com/images/I/71kFWqvvhSL._UX385_.jpg\",quantity:0}];\n","import React,{Component} from 'react';\nimport ProductCard from '../ProductCard/ProductCard';\nimport Grid from '@material-ui/core/Grid';\nimport {Data as products} from  '../../Utils/Data'\nclass Product extends Component{\n  render(){\n    return(\n      <Grid container spacing={8}> {\n        products.map((item,index)=>{\n          return <ProductCard product={item} key={`product-list-key${index}`}/>})}\n      </Grid>\n    )\n  }\n}\nexport default Product;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Products from './components/Products/Products';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n      <Header/>\n        <div  className=\"container\">\n        <Products/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}